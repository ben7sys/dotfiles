# Generated by chezmoi from data/env.yaml. Edit data/env.yaml instead.

{{- /* Robust: funktioniert mit und ohne .templateData/.data */ -}}
{{- $root := . -}}
{{- $td := (get $root "templateData") | default (get $root "data") | default (dict) -}}
{{- $env := (get $td "env") | default (dict) -}}
{{- $paths := (get $env "paths") | default (dict) -}}

{{- $home := .chezmoi.homeDir -}}
{{- $userBinRel := (get $paths "user_bin") | default ".local/bin" -}}
{{- $npmBinRel  := (get $paths "npm_global_bin") | default ".cache/.npm-global/bin" -}}

{{- /* "~" expandieren falls nÃ¶tig */ -}}
{{- $userP0 := ternary (replace "~" $home $userBinRel) $userBinRel (hasPrefix $userBinRel "~") -}}
{{- $npmP0  := ternary (replace "~" $home $npmBinRel)  $npmBinRel  (hasPrefix $npmBinRel  "~") -}}

{{- /* relativ -> absolut unter $home */ -}}
{{- $userRel := and (not (hasPrefix $userP0 "/")) (not (hasPrefix $userP0 "~")) -}}
{{- $npmRel  := and (not (hasPrefix $npmP0  "/")) (not (hasPrefix $npmP0  "~")) -}}

{{- $userbin := ternary (joinPath $home $userP0) $userP0 $userRel -}}
{{- $npmglob := ternary (joinPath $home $npmP0)  $npmP0  $npmRel  -}}

# Ensure user bin comes first if present
if test -d {{ quote $userbin }}
    if not contains -- {{ quote $userbin }} $PATH
        set -gx PATH {{ quote $userbin }} $PATH
    end
end

# NPM global bin
if test -d {{ quote $npmglob }}
    if not contains -- {{ quote $npmglob }} $PATH
        set -gx PATH {{ quote $npmglob }} $PATH
    end
end


# SSH agent via systemd user socket
if not set -q SSH_AUTH_SOCK
    set -gx SSH_AUTH_SOCK "$XDG_RUNTIME_DIR/ssh-agent.socket"
end

# Locale: prefer configured, fallback to C.UTF-8/C
{{- $pref := (get $env "locale_preferred" | default "de_DE.UTF-8") -}}
if not set -q LANG
    set -l pref {{ $pref | quote }}
    if command -q locale
        if locale -a 2>/dev/null | grep -qi -- (string replace -r '\\.' '\\.' (string lower $pref))
            set -gx LANG $pref
        else if locale -a 2>/dev/null | grep -qi '^C.UTF-8$'
            set -gx LANG C.UTF-8
        else
            set -gx LANG C
        end
    else
        set -gx LANG C.UTF-8
    end
end

# Editor
if not set -q EDITOR
    set -gx EDITOR {{ (get $env "editor" | default "nano") | quote }}
end

# Python
set -gx PYTHONDONTWRITEBYTECODE 1
set -gx PYTHONUNBUFFERED 1

# Node
set -gx NODE_ENV {{ (get $env "node_env" | default "production") | quote }}

# Ollama / Obsidian
set -gx OLLAMA_ORIGINS {{ (get $env "ollama_origins" | default "*") | quote }}

# GTK scale
{{- $gtk := (get $env "gtk") | default (dict) -}}
set -gx SWT_GTK3 {{ printf "%v" ((get $gtk "swt_gtk3") | default 1) | quote }}
set -gx GDK_SCALE {{ printf "%v" ((get $gtk "gdk_scale") | default 1) | quote }}
set -gx GDK_DPI_SCALE {{ printf "%v" ((get $gtk "gdk_dpi_scale") | default 1) | quote }}

# Storage / NAS
{{- $storage := (get $env "storage") | default (dict) -}}
set -gx STORAGE_IP {{ (get $storage "ip" | default "") | quote }}
set -gx STORAGE_NAME {{ (get $storage "name" | default "") | quote }}
