# Generated by chezmoi from data/env.yaml. Edit data/env.yaml instead.

{{- /* Robust: works with and without .templateData/.data */ -}}
{{- $root := . -}}
{{- $td := (get $root "templateData") | default (get $root "data") | default (dict) -}}
{{- $env := (get $td "env") | default (dict) -}}
{{- $paths := (get $env "paths") | default (dict) -}}

{{- $home := .chezmoi.homeDir -}}
{{- $userBinRel := (get $paths "user_bin") | default ".local/bin" -}}
{{- $npmBinRel  := (get $paths "npm_global_bin") | default ".cache/.npm-global/bin" -}}

{{- /* expand "~" if present */ -}}
{{- $userP0 := ternary (replace "~" $home $userBinRel) $userBinRel (hasPrefix $userBinRel "~") -}}
{{- $npmP0  := ternary (replace "~" $home $npmBinRel)  $npmBinRel  (hasPrefix $npmBinRel  "~") -}}

{{- /* relative -> absolute under $home */ -}}
{{- $userRel := and (not (hasPrefix $userP0 "/")) (not (hasPrefix $userP0 "~")) -}}
{{- $npmRel  := and (not (hasPrefix $npmP0  "/")) (not (hasPrefix $npmP0  "~")) -}}

{{- $userbin := ternary (joinPath $home $userP0) $userP0 $userRel -}}
{{- $npmglob := ternary (joinPath $home $npmP0)  $npmP0  $npmRel  -}}

# Common environment variables for POSIX shells (sh/bash/dash/ksh)

# Ensure user bin comes first if present
if [ -d {{ quote $userbin }} ]; then
  case ":$PATH:" in
    *:{{ $userbin }}:*) : ;;
    *) PATH="{{ $userbin }}:$PATH" ;;
  esac
fi

# SSH agent via systemd user socket
export SSH_AUTH_SOCK="${SSH_AUTH_SOCK:-$XDG_RUNTIME_DIR/ssh-agent.socket}"

# NPM global bin (if used)
if [ -d {{ quote $npmglob }} ]; then
  case ":$PATH:" in
    *:{{ $npmglob }}:*) : ;;
    *) PATH="{{ $npmglob }}:$PATH" ;;
  esac
fi

# Locale and editor (avoid global LC_ALL; set LANG with fallbacks)
{{- $pref := (get $env "locale_preferred" | default "de_DE.UTF-8") -}}
if [ -z "${LANG:-}" ]; then
  if command -v locale >/dev/null 2>&1 && locale -a 2>/dev/null | grep -qiE '^{{ (printf "%s" $pref | lower | replace "." "\\." ) }}$'; then
    export LANG='{{ $pref }}'
  elif command -v locale >/dev/null 2>&1 && locale -a 2>/dev/null | grep -qi '^C\.UTF-8$'; then
    export LANG='C.UTF-8'
  else
    export LANG='C'
  fi
fi
export EDITOR="${EDITOR:-{{ (get $env "editor" | default "nano") }}}"

# Python environment variables
export PYTHONDONTWRITEBYTECODE=1
export PYTHONUNBUFFERED=1

# Node environment variables
export NODE_ENV='{{ (get $env "node_env" | default "production") }}'

# Custom application settings
export OLLAMA_ORIGINS='{{ (get $env "ollama_origins" | default "*") }}'

# GTK Scale
{{- $gtk := (get $env "gtk") | default (dict) -}}
export SWT_GTK3='{{ printf "%v" ((get $gtk "swt_gtk3") | default 1) }}'
export GDK_SCALE='{{ printf "%v" ((get $gtk "gdk_scale") | default 1) }}'
export GDK_DPI_SCALE='{{ printf "%v" ((get $gtk "gdk_dpi_scale") | default 1) }}'

# Storage / NAS
{{- $storage := (get $env "storage") | default (dict) -}}
export STORAGE_IP='{{ (get $storage "ip" | default "") }}'
export STORAGE_NAME='{{ (get $storage "name" | default "") }}'
